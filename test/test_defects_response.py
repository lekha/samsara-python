# coding: utf-8

"""
    Samsara API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 2019-12-12
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import samsara
from samsara.models.defects_response import DefectsResponse  # noqa: E501
from samsara.rest import ApiException

class TestDefectsResponse(unittest.TestCase):
    """DefectsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test DefectsResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = samsara.models.defects_response.DefectsResponse()  # noqa: E501
        if include_optional :
            return DefectsResponse(
                data = [
                    samsara.models.defect.Defect(
                        comment = 'Air Compressor not working', 
                        created_at_time = '2020-01-27T07:06:25Z', 
                        defect_type = 'Air Compressor', 
                        id = '18', 
                        is_resolved = True, 
                        mechanic_notes = 'Extremely large oddly shaped hole in passenger side window.', 
                        mechanic_notes_updated_at_time = '2020-01-27T07:06:25Z', 
                        resolved_at_time = '2020-01-27T07:06:25Z', 
                        resolved_by = samsara.models.defect_resolved_by.Defect_resolvedBy(
                            id = '0', 
                            name = '0', 
                            type = 'driver', ), 
                        trailer = samsara.models.trailer.trailer(), 
                        vehicle = samsara.models.vehicle.vehicle(), )
                    ], 
                pagination = samsara.models.pagination_response.paginationResponse(
                    end_cursor = 'MjkY', 
                    has_next_page = True, )
            )
        else :
            return DefectsResponse(
        )

    def testDefectsResponse(self):
        """Test DefectsResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
