# coding: utf-8

"""
    Samsara API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 2019-12-12
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import samsara
from samsara.models.tachograph_driver_file_list_wrapper import TachographDriverFileListWrapper  # noqa: E501
from samsara.rest import ApiException

class TestTachographDriverFileListWrapper(unittest.TestCase):
    """TachographDriverFileListWrapper unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test TachographDriverFileListWrapper
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = samsara.models.tachograph_driver_file_list_wrapper.TachographDriverFileListWrapper()  # noqa: E501
        if include_optional :
            return TachographDriverFileListWrapper(
                driver = samsara.models.driver_tiny_response.driverTinyResponse(
                    id = '88668', 
                    name = 'Susan Bob', ), 
                files = [
                    samsara.models.tachograph_driver_file.TachographDriverFile(
                        card_number = '1000000492436002', 
                        created_at_time = '2020-01-02T15:04:05Z07:00', 
                        id = '4aff772c-a7bb-45e6-8e41-6a53e34feb83', 
                        url = 'https://samsara-tachograph-files.s3.us-west-2.amazonaws.com/123/456/789/4aff772c-a7bb-45e6-8e41-6a53e34feb83.ddd', )
                    ]
            )
        else :
            return TachographDriverFileListWrapper(
        )

    def testTachographDriverFileListWrapper(self):
        """Test TachographDriverFileListWrapper"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
