# coding: utf-8

"""
    Samsara API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 2020-06-15
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import samsara
from samsara.models.hos_clocks_for_driver import HosClocksForDriver  # noqa: E501
from samsara.rest import ApiException

class TestHosClocksForDriver(unittest.TestCase):
    """HosClocksForDriver unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test HosClocksForDriver
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = samsara.models.hos_clocks_for_driver.HosClocksForDriver()  # noqa: E501
        if include_optional :
            return HosClocksForDriver(
                clocks = samsara.models.hos_clocks.HosClocks(
                    break = samsara.models.hos_break.HosBreak(
                        time_until_break_duration_ms = 2.88E+7, ), 
                    cycle = samsara.models.hos_cycle.HosCycle(
                        cycle_remaining_duration_ms = 2.52E+8, 
                        cycle_started_at_time = '2020-01-27T07:06:25Z', 
                        cycle_tomorrow_duration_ms = 2.52E+8, ), 
                    drive = samsara.models.hos_drive.HosDrive(
                        drive_remaining_duration_ms = 3.96E+7, ), 
                    shift = samsara.models.hos_shift.HosShift(
                        shift_remaining_duration_ms = 5.04E+7, ), ), 
                current_duty_status = samsara.models.current_duty_status.CurrentDutyStatus(
                    hos_status_type = 'offDuty', ), 
                current_vehicle = samsara.models.vehicle_tiny_response.vehicleTinyResponse(
                    id = '123456789', 
                    name = 'Midwest Truck #4', ), 
                driver = samsara.models.driver_tiny_response.driverTinyResponse(
                    id = '88668', 
                    name = 'Susan Bob', ), 
                violations = samsara.models.hos_violations.HosViolations(
                    cycle_violation_duration_ms = 3.96E+7, 
                    shift_driving_violation_duration_ms = 3.96E+7, )
            )
        else :
            return HosClocksForDriver(
        )

    def testHosClocksForDriver(self):
        """Test HosClocksForDriver"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
