# coding: utf-8

"""
    Samsara API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 2020-06-15
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import samsara
from samsara.models.list_users_response import ListUsersResponse  # noqa: E501
from samsara.rest import ApiException

class TestListUsersResponse(unittest.TestCase):
    """ListUsersResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ListUsersResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = samsara.models.list_users_response.ListUsersResponse()  # noqa: E501
        if include_optional :
            return ListUsersResponse(
                data = [
                    samsara.models.user.User(
                        auth_type = 'default', 
                        email = 'user@company.com', 
                        id = '123', 
                        name = 'Bob Smith', 
                        roles = [
                            samsara.models.user_role_assignment.UserRoleAssignment(
                                role = samsara.models.user_role.UserRole(), 
                                tag = samsara.models.tag_tiny_response.tagTinyResponse(
                                    parent_tag_id = '4815', ), )
                            ], )
                    ], 
                pagination = samsara.models.pagination_response.paginationResponse(
                    end_cursor = 'MjkY', 
                    has_next_page = True, )
            )
        else :
            return ListUsersResponse(
        )

    def testListUsersResponse(self):
        """Test ListUsersResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
