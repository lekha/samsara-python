# coding: utf-8

"""
    Samsara API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 2019-12-12
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import samsara
from samsara.models.list_carrier_proposed_assignment_response import ListCarrierProposedAssignmentResponse  # noqa: E501
from samsara.rest import ApiException

class TestListCarrierProposedAssignmentResponse(unittest.TestCase):
    """ListCarrierProposedAssignmentResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ListCarrierProposedAssignmentResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = samsara.models.list_carrier_proposed_assignment_response.ListCarrierProposedAssignmentResponse()  # noqa: E501
        if include_optional :
            return ListCarrierProposedAssignmentResponse(
                data = [
                    samsara.models.carrier_proposed_assignment.CarrierProposedAssignment(
                        accepted_time = '2020-01-27T07:06:25Z', 
                        active_time = '2020-01-27T07:06:25Z', 
                        driver = null, 
                        first_seen_time = '2020-01-27T07:06:25Z', 
                        id = '08b3aeada5f4ab3010c0b4efa28d2d1890dbf8d48d2d', 
                        rejected_time = '2020-01-27T07:06:25Z', 
                        shipping_docs = 'Delivery 123, chips and soda', 
                        trailers = [
                            samsara.models.trailer_name_only_response.trailerNameOnlyResponse(
                                name = 'Midwest Trailer #5', )
                            ], 
                        vehicle = null, )
                    ], 
                pagination = samsara.models.pagination_response.paginationResponse(
                    end_cursor = 'MjkY', 
                    has_next_page = True, )
            )
        else :
            return ListCarrierProposedAssignmentResponse(
                data = [
                    samsara.models.carrier_proposed_assignment.CarrierProposedAssignment(
                        accepted_time = '2020-01-27T07:06:25Z', 
                        active_time = '2020-01-27T07:06:25Z', 
                        driver = null, 
                        first_seen_time = '2020-01-27T07:06:25Z', 
                        id = '08b3aeada5f4ab3010c0b4efa28d2d1890dbf8d48d2d', 
                        rejected_time = '2020-01-27T07:06:25Z', 
                        shipping_docs = 'Delivery 123, chips and soda', 
                        trailers = [
                            samsara.models.trailer_name_only_response.trailerNameOnlyResponse(
                                name = 'Midwest Trailer #5', )
                            ], 
                        vehicle = null, )
                    ],
                pagination = samsara.models.pagination_response.paginationResponse(
                    end_cursor = 'MjkY', 
                    has_next_page = True, ),
        )

    def testListCarrierProposedAssignmentResponse(self):
        """Test ListCarrierProposedAssignmentResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
