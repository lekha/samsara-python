# coding: utf-8

"""
    Samsara API

    Integrate your data with the Samsara API, customize the Samsara experience, and join a community of developers building with Samsara.  # noqa: E501

    The version of the OpenAPI document: 2019-12-12
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import samsara
from samsara.models.vehicle_locations_list_response import VehicleLocationsListResponse  # noqa: E501
from samsara.rest import ApiException

class TestVehicleLocationsListResponse(unittest.TestCase):
    """VehicleLocationsListResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test VehicleLocationsListResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = samsara.models.vehicle_locations_list_response.VehicleLocationsListResponse()  # noqa: E501
        if include_optional :
            return VehicleLocationsListResponse(
                data = [
                    samsara.models.vehicle_locations_list_response_data.VehicleLocationsListResponse_data(
                        id = '112', 
                        locations = [
                            samsara.models.vehicle_location.VehicleLocation(
                                heading = 120, 
                                latitude = 122.142, 
                                longitude = -93.343, 
                                reverse_geo = samsara.models.vehicle_location_reverse_geo.VehicleLocationReverseGeo(
                                    formatted_location = '16 N Fair Oaks Ave, Pasadena, CA 91103', ), 
                                speed = 48.3, 
                                time = '2020-01-27T07:06:25Z', )
                            ], 
                        name = 'Truck A7', )
                    ], 
                pagination = samsara.models.pagination_response.paginationResponse(
                    end_cursor = 'MjkY', 
                    has_next_page = True, )
            )
        else :
            return VehicleLocationsListResponse(
                data = [
                    samsara.models.vehicle_locations_list_response_data.VehicleLocationsListResponse_data(
                        id = '112', 
                        locations = [
                            samsara.models.vehicle_location.VehicleLocation(
                                heading = 120, 
                                latitude = 122.142, 
                                longitude = -93.343, 
                                reverse_geo = samsara.models.vehicle_location_reverse_geo.VehicleLocationReverseGeo(
                                    formatted_location = '16 N Fair Oaks Ave, Pasadena, CA 91103', ), 
                                speed = 48.3, 
                                time = '2020-01-27T07:06:25Z', )
                            ], 
                        name = 'Truck A7', )
                    ],
                pagination = samsara.models.pagination_response.paginationResponse(
                    end_cursor = 'MjkY', 
                    has_next_page = True, ),
        )

    def testVehicleLocationsListResponse(self):
        """Test VehicleLocationsListResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
